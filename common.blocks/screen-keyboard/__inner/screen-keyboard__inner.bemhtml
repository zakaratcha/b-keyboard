block('screen-keyboard').elem('inner')(
    def()(function () {
        var ctx = this.ctx;

        if (ctx.allowedLangs) {
            ctx.langs = ctx.langs.filter(function (l) {
                return ctx.allowedLangs.indexOf(l.id) !== -1;
            });
        }

        return applyNext();
    }),
    attrs()(function () {
        return {
            'data-keys': JSON.stringify(this.ctx.keys),
            'data-langs': JSON.stringify(this.ctx.langs),
            'data-allowed': JSON.stringify(this.ctx.allowedLangs || null)
        };
    }),
    content()(function () {
        var ctx = this.ctx;
        var lang = ctx.lang;
        var langs = ctx.langs;
        var mode = ctx.mode;
        var keys = ctx.keys[mode].keys.split('');
        var specKeys = (ctx.keys[mode].specialKeys || ctx.keys.specialKeys);
        var keyNum = 0;

        return this.ctx.rowsLayout.map(function (keysCount) {
            return {
                elem: 'row',
                content: keys.splice(0, keysCount).map(function (keyCode) {
                    keyNum++;

                    var special = specKeys[keyNum] || {};
                    var isSuppressed = (special.mode === mode);
                    var keyMode = special.mode;

                    return {
                        elem: 'key',
                        elemMods: {
                            special: special.type,
                            modechanger: Boolean(special.mode),
                            suppressed: isSuppressed
                        },
                        attrs: {
                            'data-mode': keyMode
                        },
                        lang: lang,
                        langs: langs,
                        mode: mode,
                        content: [
                            {
                                elem: 'val',
                                content: special.value || keyCode
                            },
                            special.label
                        ]
                    };
                })
            };
        });
    })
);
